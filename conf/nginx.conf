
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    map_hash_bucket_size 128;

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  simple  '$remote_addr, Time:  [$time_local], Request: "$request" '
                        'Status: $status';                 

    log_format  custom  '$http_x_custom_ip, Time:  [$time_local], Request: "$request" '
                        'Status: $status';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80; # porta que está sendo ouvida
    # Em conjunto com o arquivo de host do computador define qual é o nome do domínio para o local        
        server_name  localhost;  

    # Difinições para o que fazer quando receber requisições. Aqui uma requisição para a raiz vai servir o html da pasta html 
         location / {
             root   html;
        #     # O arquivo que será buscado seá um index poendo ser um dos listados abaixo
             index  index.html index.htm;
         }

        location /service3 {
            proxy_pass http://localhost:8083/;
        }

        location /service4 {
            proxy_pass http://localhost:8084/;
        }

        location /load-balance {
            proxy_pass http://localhost:8085/;
            
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    # Pasta servers aqui é irmã de nginx.conf. 
    # No windows precisa usar *.conf pois não acha só com *
    include servers/*.conf; 

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
